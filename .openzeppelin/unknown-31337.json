{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0x7c9a125349acc84ca98dbc039e8e8f2100f3bd61b3f04f1808ab3101182dbb79"
  },
  "proxies": [
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0x1c03ca2888742e9ce5ae1b4567027a3703033eea5541a561bb3286c97d36bc5d",
      "kind": "transparent"
    },
    {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0x3c59cea05dc440af895c5b4b560e8374e149ca18eb635a9c919fc508801cdba3",
      "kind": "transparent"
    },
    {
      "address": "0x59b670e9fA9D0A427751Af201D676719a970857b",
      "txHash": "0xd113099f8d8044b590be8d4ca765cfe4138ea41e19e9111ce0210c74da9f0efd",
      "kind": "transparent"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0x48fb8d6630a06a6b680e89cc3b6c32ae5645eac1678928f7ec97a4b3df337cf5",
      "kind": "transparent"
    },
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0x9259d9beea881d70d2dac0ca07d4c74a6f5269259a3d8004bd75febf0af254fc",
      "kind": "transparent"
    },
    {
      "address": "0xe044814c9eD1e6442Af956a817c161192cBaE98F",
      "txHash": "0xffe7151fa55df772c5d24e1435f01d39fb2e834e58db2aa7f1086ee67e83a16e",
      "kind": "transparent"
    },
    {
      "address": "0x4ff1f64683785E0460c24A4EF78D582C2488704f",
      "txHash": "0xebd3f6a069464b03e7dee0fcddac03630927835a6fdd7977a07f68117c604eab",
      "kind": "transparent"
    },
    {
      "address": "0xc6B407503dE64956Ad3cF5Ab112cA4f56AA13517",
      "txHash": "0xf01d35bad1ae608264972f1b0189912b14bfb99fb26f821b6a44ce663224986d",
      "kind": "transparent"
    },
    {
      "address": "0x6A47346e722937B60Df7a1149168c0E76DD6520f",
      "txHash": "0x35c840eb47f524b40273fff6b84172c1927cc7cf3f9a0acf7f171bf0741e6afc",
      "kind": "transparent"
    },
    {
      "address": "0xB7ca895F81F20e05A5eb11B05Cbaab3DAe5e23cd",
      "txHash": "0xe48184a9c333737835ede7538b0a9c7454902f47ff050736d7bec08b02fc0628",
      "kind": "transparent"
    },
    {
      "address": "0x1D3EDBa836caB11C26A186873abf0fFeB8bbaE63",
      "txHash": "0x7dbb3dba3d536f87d85d15d310cb06e6240a6ae1f69cf01a04ac6721af87d97f",
      "kind": "transparent"
    },
    {
      "address": "0xFCFE742e19790Dd67a627875ef8b45F17DB1DaC6",
      "txHash": "0xc955b0296e1732b260e8453c5b972c49a26774a71f37c81aaeed84c44366ec1c",
      "kind": "transparent"
    },
    {
      "address": "0xdb54fa574a3e8c6aC784e1a5cdB575A737622CFf",
      "txHash": "0x096994559fcf660b82435a119a036c78b67ba2baa0769c0d622a4fba0789018f",
      "kind": "transparent"
    },
    {
      "address": "0xccA9728291bC98ff4F97EF57Be3466227b0eb06C",
      "txHash": "0x4579559e878b88b69460d33e4f086baba9700b22a4688f023322ebd1636bf468",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0x91cf2aa08d1faf932141b59fb618a9d9ba15295eeb6dea6cd0f578b9e058207c",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x2820db732ff92357373f9740d357be849e456f80866ddf39b11bfce4c80d7bc3",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x8301df90396caef5902f4dbc2f41f3ee065d1de2edc11165062c21aaff52ef83",
      "kind": "transparent"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0xa69921b5d88ea57b6873352d8693b772115810e6f3437bc12c6927c2b7f3bfd9",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0x0e5a0602bd6b14e19aa631f61b2e59a343be676316b4de6648f583da5f3a61d2",
      "kind": "transparent"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0xe06c4c17cb9083bb2cb511c5c8e4baa35048d5fdc734ce36b9ee6201c027d2fd",
      "kind": "transparent"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xb1024ff18e638503304180ec35bf16308ba62a4bb39a79b4965e1cf4a50ea396",
      "kind": "transparent"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x62eae5b298db8c27cbdc1770f53ca3a868d26b4fd66d5abcea8931b60db5abbe",
      "kind": "transparent"
    },
    {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0x347ff6544be1f76dd1b97b4a1b057427713fe6daf96ad4037f2af765453b476e",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x739ebbb649979eaac1fd614794cfe39cac9b76e7e3dce2468ddad24f89e135e9",
      "kind": "transparent"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x31f4eb444dc17d1094d846e13dc3cbc3736963d18934d1b8b1c5aa3199cb7814",
      "kind": "transparent"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0xe864d67b21a8549f8f918fb94deae8e6a7cd14a9612d96b48ff05cf37fe9c657",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0x2fe63e7d6da9d4dac24328f09ad862ca7c93609fb73c671ab587a602c84c173a",
      "kind": "transparent"
    },
    {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0x41951bea21b4c45c6155e6e0ddc467266eaa4c4c3fe264cc95f6e440920400c7",
      "kind": "transparent"
    },
    {
      "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
      "txHash": "0x1747aa74fe9d7dbf3a47eb2805d64a855868ad3134f86ca660e1682505cd2213",
      "kind": "transparent"
    },
    {
      "address": "0x1613beB3B2C4f22Ee086B2b38C1476A3cE7f78E8",
      "txHash": "0xe723c3e7524aeaac4a1824895067eaf94005f5d88208b040103c16ae10e74ea7",
      "kind": "transparent"
    },
    {
      "address": "0x99bbA657f2BbC93c02D617f8bA121cB8Fc104Acf",
      "txHash": "0xad53b53012b39f622a11cc3c2250825bd9c4fd27781c544c0e10157c40250d72",
      "kind": "transparent"
    }
  ],
  "impls": {
    "88a20affbdf4893cca9b5b2a9eff76a61d7cdb38463d3e25aec9a9ddd477b35b": {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0x95673f900be22a016c6473b3665cab61525a6bae469ad12a872bb8b9a2095e33",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_owner",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Ownable",
            "src": "contracts/extension/Ownable.sol:15"
          },
          {
            "label": "royaltyRecipient",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Royalty",
            "src": "contracts/extension/Royalty.sol:17"
          },
          {
            "label": "royaltyBps",
            "offset": 20,
            "slot": "1",
            "type": "t_uint16",
            "contract": "Royalty",
            "src": "contracts/extension/Royalty.sol:20"
          },
          {
            "label": "royaltyInfoForToken",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)7331_storage)",
            "contract": "Royalty",
            "src": "contracts/extension/Royalty.sol:23"
          },
          {
            "label": "recipient",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "PrimarySale",
            "src": "contracts/extension/PrimarySale.sol:15"
          },
          {
            "label": "platformFeeRecipient",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PlatformFee",
            "src": "contracts/extension/PlatformFee.sol:15"
          },
          {
            "label": "platformFeeBps",
            "offset": 20,
            "slot": "4",
            "type": "t_uint16",
            "contract": "PlatformFee",
            "src": "contracts/extension/PlatformFee.sol:18"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol:49"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:50"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4765_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "356",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "361",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "409",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "nextTokenIdToMint",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:66"
          },
          {
            "label": "maxWalletClaimCount",
            "offset": 0,
            "slot": "456",
            "type": "t_uint256",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:69"
          },
          {
            "label": "maxTotalSupply",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:72"
          },
          {
            "label": "primaryMSCommunityFeeRecipient",
            "offset": 0,
            "slot": "458",
            "type": "t_address",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:75"
          },
          {
            "label": "primaryMSCommunityFeeBps",
            "offset": 20,
            "slot": "458",
            "type": "t_uint16",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:78"
          },
          {
            "label": "contractURI",
            "offset": 0,
            "slot": "459",
            "type": "t_string_storage",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:81"
          },
          {
            "label": "baseURIIndices",
            "offset": 0,
            "slot": "460",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:84"
          },
          {
            "label": "claimCondition",
            "offset": 0,
            "slot": "461",
            "type": "t_struct(ClaimConditionList)7473_storage",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:87"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "466",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:97"
          },
          {
            "label": "encryptedData",
            "offset": 0,
            "slot": "467",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:103"
          },
          {
            "label": "walletClaimCount",
            "offset": 0,
            "slot": "468",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:106"
          },
          {
            "label": "royaltyInfoForToken",
            "offset": 0,
            "slot": "469",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)7331_storage)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:109"
          },
          {
            "label": "hasBeenMinted",
            "offset": 0,
            "slot": "470",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4765_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BitMap)4309_storage)": {
            "label": "mapping(uint256 => struct BitMapsUpgradeable.BitMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ClaimCondition)7452_storage)": {
            "label": "mapping(uint256 => struct IDropClaimCondition.ClaimCondition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)7331_storage)": {
            "label": "mapping(uint256 => struct IRoyalty.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4765_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4450_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BitMap)4309_storage": {
            "label": "struct BitMapsUpgradeable.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ClaimCondition)7452_storage": {
            "label": "struct IDropClaimCondition.ClaimCondition",
            "members": [
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxClaimableSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "supplyClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "quantityLimitPerTransaction",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "waitTimeInSecondsBetweenClaims",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "currency",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(ClaimConditionList)7473_storage": {
            "label": "struct IDropClaimCondition.ClaimConditionList",
            "members": [
              {
                "label": "currentStartId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "count",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "phases",
                "type": "t_mapping(t_uint256,t_struct(ClaimCondition)7452_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "limitLastClaimTimestamp",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "limitMerkleProofClaim",
                "type": "t_mapping(t_uint256,t_struct(BitMap)4309_storage)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)7331_storage": {
            "label": "struct IRoyalty.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bps",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4450_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "48c5cb9fbe5e5baf52d4a731587c8825dfe808284ef80250456224421780ec01": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xeadfcb2eb64c60c5116efc6bb020cc9e68cd50689bcd318bc9042487992ee645",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol:49"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MulticallUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:50"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3388_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "nativeTokenWrapper",
            "offset": 0,
            "slot": "351",
            "type": "t_address",
            "contract": "MSMarketplace",
            "src": "contracts/marketplace/MSMarketplace.sol:52"
          },
          {
            "label": "totalListings",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "MSMarketplace",
            "src": "contracts/marketplace/MSMarketplace.sol:55"
          },
          {
            "label": "MSFeeRecipient",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "MSMarketplace",
            "src": "contracts/marketplace/MSMarketplace.sol:58"
          },
          {
            "label": "MSFeeBps",
            "offset": 20,
            "slot": "353",
            "type": "t_uint64",
            "contract": "MSMarketplace",
            "src": "contracts/marketplace/MSMarketplace.sol:61"
          },
          {
            "label": "MSCommunityFeeRecipient",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "MSMarketplace",
            "src": "contracts/marketplace/MSMarketplace.sol:67"
          },
          {
            "label": "MSCommunityFeeBps",
            "offset": 20,
            "slot": "354",
            "type": "t_uint64",
            "contract": "MSMarketplace",
            "src": "contracts/marketplace/MSMarketplace.sol:70"
          },
          {
            "label": "timeBuffer",
            "offset": 0,
            "slot": "355",
            "type": "t_uint64",
            "contract": "MSMarketplace",
            "src": "contracts/marketplace/MSMarketplace.sol:72"
          },
          {
            "label": "bidBufferBps",
            "offset": 8,
            "slot": "355",
            "type": "t_uint64",
            "contract": "MSMarketplace",
            "src": "contracts/marketplace/MSMarketplace.sol:75"
          },
          {
            "label": "listings",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(Listing)3843_storage)",
            "contract": "MSMarketplace",
            "src": "contracts/marketplace/MSMarketplace.sol:82"
          },
          {
            "label": "offers",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(Offer)3796_storage)))",
            "contract": "MSMarketplace",
            "src": "contracts/marketplace/MSMarketplace.sol:85"
          },
          {
            "label": "winningBid",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(BidOffer)3778_storage)",
            "contract": "MSMarketplace",
            "src": "contracts/marketplace/MSMarketplace.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ListingType)3765": {
            "label": "enum IMarketplace.ListingType",
            "members": [
              "Direct",
              "Auction"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TokenType)3762": {
            "label": "enum IMarketplace.TokenType",
            "members": [
              "ERC1155",
              "ERC721"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(Offer)3796_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct IMarketplace.Offer)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Offer)3796_storage)": {
            "label": "mapping(address => struct IMarketplace.Offer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3388_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Offer)3796_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IMarketplace.Offer))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BidOffer)3778_storage)": {
            "label": "mapping(uint256 => struct IMarketplace.BidOffer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Listing)3843_storage)": {
            "label": "mapping(uint256 => struct IMarketplace.Listing)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3388_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3073_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BidOffer)3778_storage": {
            "label": "struct IMarketplace.BidOffer",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "offeror",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "quantityWanted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "currency",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Listing)3843_storage": {
            "label": "struct IMarketplace.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetContract",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "currency",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "reservePricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "buyoutPricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "tokenType",
                "type": "t_enum(TokenType)3762",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "listingType",
                "type": "t_enum(ListingType)3765",
                "offset": 1,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Offer)3796_storage": {
            "label": "struct IMarketplace.Offer",
            "members": [
              {
                "label": "nftContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenType",
                "type": "t_enum(TokenType)3762",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "offeror",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "quantityWanted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "currency",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "expirationTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3073_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d99f64e3675d7fdbc278cab74cbe77cc6407b17048de369c5fe0471710776837": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xd3cdbea537607b37d8aeeec8415a8ab2e72ebd1047a282aacff397dfa6e6e757",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_owner",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Ownable",
            "src": "contracts/extension/Ownable.sol:15"
          },
          {
            "label": "royaltyRecipient",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Royalty",
            "src": "contracts/extension/Royalty.sol:17"
          },
          {
            "label": "royaltyBps",
            "offset": 20,
            "slot": "1",
            "type": "t_uint16",
            "contract": "Royalty",
            "src": "contracts/extension/Royalty.sol:20"
          },
          {
            "label": "royaltyInfoForToken",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)7616_storage)",
            "contract": "Royalty",
            "src": "contracts/extension/Royalty.sol:23"
          },
          {
            "label": "recipient",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "PrimarySale",
            "src": "contracts/extension/PrimarySale.sol:15"
          },
          {
            "label": "platformFeeRecipient",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PlatformFee",
            "src": "contracts/extension/PlatformFee.sol:15"
          },
          {
            "label": "platformFeeBps",
            "offset": 20,
            "slot": "4",
            "type": "t_uint16",
            "contract": "PlatformFee",
            "src": "contracts/extension/PlatformFee.sol:18"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/openzeppelin-presets/metatx/ERC2771ContextUpgradeable.sol:49"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4656_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "305",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "311",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "359",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "nextTokenIdToMint",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:63"
          },
          {
            "label": "maxWalletClaimCount",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:66"
          },
          {
            "label": "primaryMSCommunityFeeRecipient",
            "offset": 0,
            "slot": "407",
            "type": "t_address",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:70"
          },
          {
            "label": "primaryMSCommunityFeeBps",
            "offset": 20,
            "slot": "407",
            "type": "t_uint16",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:73"
          },
          {
            "label": "contractURI",
            "offset": 0,
            "slot": "408",
            "type": "t_string_storage",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:76"
          },
          {
            "label": "indices",
            "offset": 0,
            "slot": "409",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:79"
          },
          {
            "label": "Editions",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_uint256,t_struct(Edition)5046_storage)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:104"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:110"
          },
          {
            "label": "walletClaimCount",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:114"
          },
          {
            "label": "royaltyInfoForToken",
            "offset": 0,
            "slot": "413",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)7616_storage)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:117"
          },
          {
            "label": "hasBeenMinted",
            "offset": 0,
            "slot": "414",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:119"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "415",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:121"
          },
          {
            "label": "Bids",
            "offset": 0,
            "slot": "416",
            "type": "t_mapping(t_uint256,t_struct(Bid)5053_storage)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:123"
          },
          {
            "label": "isActive",
            "offset": 0,
            "slot": "417",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MSDropERC721",
            "src": "contracts/drop/MSDropERC721.sol:125"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4656_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Bid)5053_storage)": {
            "label": "mapping(uint256 => struct MSDropERC721.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BitMap)4200_storage)": {
            "label": "mapping(uint256 => struct BitMapsUpgradeable.BitMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ClaimCondition)7725_storage)": {
            "label": "mapping(uint256 => struct IDropClaimCondition.ClaimCondition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Edition)5046_storage)": {
            "label": "mapping(uint256 => struct MSDropERC721.Edition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)7616_storage)": {
            "label": "mapping(uint256 => struct IRoyalty.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4656_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4341_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bid)5053_storage": {
            "label": "struct MSDropERC721.Bid",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(BitMap)4200_storage": {
            "label": "struct BitMapsUpgradeable.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ClaimCondition)7725_storage": {
            "label": "struct IDropClaimCondition.ClaimCondition",
            "members": [
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxClaimableSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "supplyClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "quantityLimitPerTransaction",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "waitTimeInSecondsBetweenClaims",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "currency",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(ClaimConditionList)7746_storage": {
            "label": "struct IDropClaimCondition.ClaimConditionList",
            "members": [
              {
                "label": "currentStartId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "count",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "phases",
                "type": "t_mapping(t_uint256,t_struct(ClaimCondition)7725_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "limitLastClaimTimestamp",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "limitMerkleProofClaim",
                "type": "t_mapping(t_uint256,t_struct(BitMap)4200_storage)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Edition)5046_storage": {
            "label": "struct MSDropERC721.Edition",
            "members": [
              {
                "label": "isAuction",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isPhysic",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimCondition",
                "type": "t_struct(ClaimConditionList)7746_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)7616_storage": {
            "label": "struct IRoyalty.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bps",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4341_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
